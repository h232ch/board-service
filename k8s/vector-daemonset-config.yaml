apiVersion: v1
kind: ConfigMap
metadata:
  name: vector-daemonset-config
  namespace: board-service
  labels:
    app: vector-daemonset
    component: logging
data:
  vector.yaml: |
    api:
      enabled: true
      address: "0.0.0.0:8686"
    
    sources:
      nginx_logs:
        type: "file"
        include:
          - "/var/log/app/board-service/nginx/*.log"
        read_from: "end"  # Read from beginning of file to process existing logs
        ignore_older_secs: 0  # Don't ignore any logs
        ignore_checkpoints: false  # Use checkpoints for resume capability
      
      backend_logs:
        type: "file"
        include:
          - "/var/log/app/board-service/nodejs/access.log"
        read_from: "end"  # Read from beginning of file to process existing logs
        ignore_older_secs: 0  # Don't ignore any logs
        ignore_checkpoints: false  # Use checkpoints for resume capability
    
    transforms:
      parse_nginx:
        type: "remap"
        inputs: ["nginx_logs"]
        source: |
          .component = "nginx"
          .service = "board-service"
          .timestamp = now()
      
      parse_backend:
        type: "remap"
        inputs: ["backend_logs"]
        source: |
          .component = "backend"
          .service = "board-service"
          .timestamp = now()
      
      add_metadata:
        type: "remap"
        inputs: ["parse_nginx", "parse_backend"]
        source: |
          # Add common metadata to all logs
          .cluster = "minikube"
          .environment = "development"
          .vector_version = "0.35.0"
          
          # Extract pod name from file path if possible
          .pod_name = get_env_var!("NODE_NAME")
          .namespace = "board-service"
    
    sinks:
      # JSON console output for real-time monitoring
      json_console:
        type: "console"
        inputs: ["add_metadata"]
        encoding:
          codec: "json"
          timestamp_format: "rfc3339"

apiVersion: apps/v1
kind: Deployment
metadata:
  name: board-backend
  namespace: board-service
  labels:
    app: board-backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: board-backend
  template:
    metadata:
      labels:
        app: board-backend
    spec:
      containers:
      - name: board-backend
        image: dnwn7166/board-backend:latest
        ports:
        - containerPort: 8080
        volumeMounts:
        - name: backend-logs
          mountPath: /var/log/app/board-service/nodejs
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: board-service-config
              key: NODE_ENV
        - name: MONGODB_URI
          valueFrom:
            secretKeyRef:
              name: board-service-secrets
              key: MONGODB_URI
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: board-service-secrets
              key: JWT_SECRET
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
      
      - name: vector-sidecar
        image: timberio/vector:0.35.0-alpine
        ports:
        - containerPort: 8686
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: CONTAINER_NAME
          value: "vector-sidecar"
        volumeMounts:
        - name: backend-logs
          mountPath: /var/log/app/board-service/nodejs
        - name: vector-config
          mountPath: /etc/vector
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8686
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8686
          initialDelaySeconds: 5
          periodSeconds: 5
      
      volumes:
      - name: backend-logs
        persistentVolumeClaim:
          claimName: backend-logs-pvc
      - name: vector-config
        configMap:
          name: vector-sidecar-config